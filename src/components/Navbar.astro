---
import { Icon } from 'astro-icon/components'

const currentPath: string = Astro.url.pathname

const navItems = [
  { path: '/', label: '/~' },
  { path: '/me', label: '/me' },
  { path: '/rants', label: '/rants' },
  { path: '/projects', label: '/projects' },
]

const isActivePath = (path: string): boolean => {
  if (path === '/') {
    return currentPath === '/'
  }
  return currentPath.startsWith(path)
}
---

<div class="w-full z-[10000000] mb-4 md:mb-4 sticky top-4 md:top-8 flex justify-center">
  <div
    class="bg-bg p-4 mx-4 lg:mx-12 md:p-3 lg:px-4 rounded-xl md:w-2/3 w-full lg:w-1/2 bg-mbg/60 backdrop-blur-xl md:flex md:items-center md:justify-between"
  >
    <div class="flex items-center justify-between">
      <a class="flex cursor-pointer items-center" href="/">
        <span class="text-[22px] cursor-pointer antialiased font-bold text-fg">imide</span>
        <span class="text-[22px] cursor-pointer antialiased font-bold text-primary">.xyz</span>
      </a>
      <span class="toggler self-center">
        <i class={`text-[22px] cursor-pointer block md:hidden text-fg ph-light ph-list`}></i>
      </span>
    </div>
    <ul
      class={`md:flex md:items-center ml-0 z-[-1] md:z-auto navlist list-none hidden sm:visible transition-all duration-400 md-static ms:absolute `}
    >
      {
        navItems.map(({ path, label }) => (
          <li class="mx-0 my-6 md:my-0 md:mx-2">
            <a
              class:list={[
                `text-[19px] px-0 md:px-3 py-1 rounded-md hover:!text-fg font-medium `,
                isActivePath(path) ? 'md:bg-neutral-800 !text-fg' : 'bg-transparent !text-bright',
              ]}
              href={path}
            >
              {label}
            </a>
          </li>
        ))
      }

      <span class="flex gap-4 lg:gap-0">
        <li class="mx-0 my-2 md:my-0 md:mx-4">
          <a class="text-xl hover:!text-fg font-medium !text-fg" href="https://github.com/imide"
            ><Icon name="ph:github-logo-fill" /></a
          >
        </li>
      </span>
    </ul>
  </div>
</div>
<script>
  const navlist = document.querySelector('.navlist') as HTMLUListElement
  const toggler = document.querySelector('.toggler') as HTMLElement | null

  if (navlist && toggler) {
    toggler.addEventListener('click', () => {
      navlist.classList.toggle('hidden')
    })
  }
</script>
